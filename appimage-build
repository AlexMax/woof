#!/usr/bin/env bash

# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

cd "$(dirname "$0")"

# Construct the build environment.
docker build -t woof-appimage -f AppImage.Dockerfile .

# Create our destination directory for build artifacts.
mkdir -p "$(pwd)/build-appimage/usr"

# Run the build script.
docker run --rm \
    --mount type=bind,src="$(pwd)",dst=/tmp/woof-src \
    --mount type=bind,src="$(pwd)/build-appimage/usr",dst=/tmp/woof-install \
    --env UID="$(id --user)" --env GID="$(id --group)" \
    woof-appimage

# Copy and link up necessary files.
cp -f ./AppRun ./build-appimage
chmod +x ./build-appimage/AppRun
ln -frs \
    ./build-appimage/usr/share/applications/woof.desktop \
    ./build-appimage
ln -frs \
    ./build-appimage/usr/share/icons/hicolor/128x128/apps/woof.png \
    ./build-appimage

# Build the AppImage.
appimagetool build-appimage
